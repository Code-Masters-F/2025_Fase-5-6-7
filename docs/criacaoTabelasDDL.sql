-- ========================================
-- SCRIPT DDL - CRIAÇÃO DAS TABELAS (ORACLE 19c+ com IDENTITY)
-- MODELO REFATORADO - SISTEMA CORRETORA DE CRIPTOMOEDAS
-- ========================================

-- Configuração de formato de data
ALTER SESSION SET NLS_DATE_FORMAT = 'DD/MM/YYYY';
ALTER SESSION SET NLS_TIMESTAMP_FORMAT = 'DD/MM/YYYY HH24:MI:SS';

-- ========================================
-- DROP SEGURO DAS TABELAS (ordem inversa de dependências)
-- ========================================
BEGIN EXECUTE IMMEDIATE 'DROP TABLE TRANSACAO_CRIPTOMOEDA'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE POSSE'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE TRANSACAO_FIAT'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE CARTEIRA'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE CONTA_INTERNA'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE CONTA_EXTERNA'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE CRIPTOMOEDA'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE CLIENTE'; EXCEPTION WHEN OTHERS THEN NULL; END;
/

-- ========================================
-- TABELA CLIENTE
-- ========================================
CREATE TABLE CLIENTE (
    id_cliente INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    nome VARCHAR2(100) NOT NULL,
    email VARCHAR2(150) NOT NULL,
    cpf CHAR(11) NOT NULL,
    data_nascimento DATE NOT NULL,
    CONSTRAINT CLIENTE_PK PRIMARY KEY (id_cliente),
    CONSTRAINT CLIENTE_cpf_email_UN UNIQUE (cpf, email)
);

-- ========================================
-- TABELA CONTA_EXTERNA
-- ========================================
CREATE TABLE CONTA_EXTERNA (
    id_conta_externa INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    cliente_id_cliente INTEGER NOT NULL,
    numero_conta VARCHAR2(20) NOT NULL,
    agencia VARCHAR2(10) NOT NULL,
    codigo_banco_externo CHAR(3) NOT NULL,
    nome_banco VARCHAR2(100) NOT NULL,
    CONSTRAINT CONTA_EXTERNA_PK PRIMARY KEY (id_conta_externa),
    CONSTRAINT CONTA_EXTERNA_CLIENTE_FK FOREIGN KEY (cliente_id_cliente)
        REFERENCES CLIENTE(id_cliente) ON DELETE CASCADE,
    CONSTRAINT CONTA_EXTERNA_conta_agencia_banco_UN UNIQUE (numero_conta, agencia, codigo_banco_externo)
);

-- Índice para otimizar consultas por cliente
CREATE INDEX CONTA_EXTERNA_IDX ON CONTA_EXTERNA (cliente_id_cliente);

-- ========================================
-- TABELA CONTA_INTERNA
-- ========================================
CREATE TABLE CONTA_INTERNA (
    id_conta_interna INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    cliente_id_cliente INTEGER NOT NULL,
    numero_conta VARCHAR2(20) NOT NULL,
    agencia VARCHAR2(10) NOT NULL,
    codigo_banco_externo CHAR(3) NOT NULL,
    data_abertura DATE NOT NULL,
    saldo NUMBER(18,2) DEFAULT 0 NOT NULL,
    CONSTRAINT CONTA_INTERNA_PK PRIMARY KEY (id_conta_interna),
    CONSTRAINT CONTA_INTERNA_CLIENTE_FK FOREIGN KEY (cliente_id_cliente)
        REFERENCES CLIENTE(id_cliente) ON DELETE CASCADE,
    CONSTRAINT CONTA_INTERNA_conta_agencia_UN UNIQUE (numero_conta, agencia)
);

-- Índice para otimizar consultas por cliente
CREATE INDEX CONTA_INTERNA_IDX ON CONTA_INTERNA (cliente_id_cliente);

-- ========================================
-- TABELA TRANSACAO_FIAT
-- ========================================
CREATE TABLE TRANSACAO_FIAT (
    id_transacao INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    conta_externa_id INTEGER NOT NULL,
    conta_interna_id INTEGER NOT NULL,
    valor NUMBER(18,2) NOT NULL,
    tipo VARCHAR2(20) NOT NULL,
    data_hora TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    CONSTRAINT TRANSACAO_FIAT_PK PRIMARY KEY (id_transacao),
    CONSTRAINT TRANSACAO_FIAT_CONTA_EXTERNA_FK FOREIGN KEY (conta_externa_id)
        REFERENCES CONTA_EXTERNA(id_conta_externa) ON DELETE CASCADE,
    CONSTRAINT TRANSACAO_FIAT_CONTA_INTERNA_FK FOREIGN KEY (conta_interna_id)
        REFERENCES CONTA_INTERNA(id_conta_interna) ON DELETE CASCADE,
    CONSTRAINT TRANSACAO_FIAT_valor_CHECK CHECK (valor > 0),
    CONSTRAINT TRANSACAO_FIAT_tipo_CHECK CHECK (tipo IN ('DEPOSITO', 'SAQUE')),
    CONSTRAINT TRANSACAO_FIAT_contas_diferentes_CHECK CHECK (conta_externa_id != conta_interna_id)
);

-- Índices para otimizar consultas
CREATE INDEX TRANSACAO_FIAT_EXTERNA_IDX ON TRANSACAO_FIAT (conta_externa_id);
CREATE INDEX TRANSACAO_FIAT_INTERNA_IDX ON TRANSACAO_FIAT (conta_interna_id);
CREATE INDEX TRANSACAO_FIAT_DATA_IDX ON TRANSACAO_FIAT (data_hora);

-- ========================================
-- TABELA CRIPTOMOEDA
-- ========================================
CREATE TABLE CRIPTOMOEDA (
    id_criptomoeda INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    nome VARCHAR2(80) NOT NULL,
    sigla VARCHAR2(10) NOT NULL,
    data_lancamento DATE NOT NULL,
    CONSTRAINT CRIPTOMOEDA_PK PRIMARY KEY (id_criptomoeda),
    CONSTRAINT CRIPTOMOEDA_sigla_UN UNIQUE (sigla)
);

-- ========================================
-- TABELA CARTEIRA
-- ========================================
CREATE TABLE CARTEIRA (
    id_carteira INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    conta_interna_id INTEGER NOT NULL,
    CONSTRAINT CARTEIRA_PK PRIMARY KEY (id_carteira),
    CONSTRAINT CARTEIRA_CONTA_INTERNA_FK FOREIGN KEY (conta_interna_id)
        REFERENCES CONTA_INTERNA(id_conta_interna) ON DELETE CASCADE
);

-- Índice para otimizar consultas por conta interna
CREATE INDEX CARTEIRA_IDX ON CARTEIRA (conta_interna_id);

-- ========================================
-- TABELA POSSE
-- ========================================
CREATE TABLE POSSE (
    carteira_id_carteira INTEGER NOT NULL,
    criptomoeda_id_criptomoeda INTEGER NOT NULL,
    quantidade_criptomoeda NUMBER(20,8) DEFAULT 0 NOT NULL,
    CONSTRAINT POSSE_PK PRIMARY KEY (carteira_id_carteira, criptomoeda_id_criptomoeda),
    CONSTRAINT POSSE_CARTEIRA_FK FOREIGN KEY (carteira_id_carteira)
        REFERENCES CARTEIRA(id_carteira) ON DELETE CASCADE,
    CONSTRAINT POSSE_CRIPTOMOEDA_FK FOREIGN KEY (criptomoeda_id_criptomoeda)
        REFERENCES CRIPTOMOEDA(id_criptomoeda),
    CONSTRAINT POSSE_quantidade_CHECK CHECK (quantidade_criptomoeda >= 0)
);

-- ========================================
-- TABELA TRANSACAO_CRIPTOMOEDA
-- ========================================
CREATE TABLE TRANSACAO_CRIPTOMOEDA (
    id_transacao_criptomoeda INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    conta_interna_id INTEGER NOT NULL,
    criptomoeda_id_criptomoeda INTEGER NOT NULL,
    tipo_operacao VARCHAR2(10) NOT NULL,
    quantidade_criptomoeda NUMBER(20,8) NOT NULL,
    valor_unitario NUMBER(20,8) NOT NULL,
    data_hora TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    status VARCHAR2(15) DEFAULT 'PENDENTE' NOT NULL,
    CONSTRAINT TRANSACAO_CRIPTOMOEDA_PK PRIMARY KEY (id_transacao_criptomoeda),
    CONSTRAINT TRANSACAO_CRIPTOMOEDA_CONTA_INTERNA_FK FOREIGN KEY (conta_interna_id)
        REFERENCES CONTA_INTERNA(id_conta_interna) ON DELETE CASCADE,
    CONSTRAINT TRANSACAO_CRIPTOMOEDA_CRIPTOMOEDA_FK FOREIGN KEY (criptomoeda_id_criptomoeda)
        REFERENCES CRIPTOMOEDA(id_criptomoeda),
    CONSTRAINT TRANSACAO_CRIPTOMOEDA_tipo_CHECK CHECK (tipo_operacao IN ('COMPRA', 'VENDA')),
    CONSTRAINT TRANSACAO_CRIPTOMOEDA_quantidade_CHECK CHECK (quantidade_criptomoeda > 0),
    CONSTRAINT TRANSACAO_CRIPTOMOEDA_valor_CHECK CHECK (valor_unitario > 0),
    CONSTRAINT TRANSACAO_CRIPTOMOEDA_status_CHECK CHECK (status IN ('PENDENTE', 'CONCLUIDA', 'CANCELADA', 'FALHOU'))
);

-- Índices para otimizar consultas
CREATE INDEX TRANSACAO_CRIPTOMOEDA_CONTA_IDX ON TRANSACAO_CRIPTOMOEDA (conta_interna_id);
CREATE INDEX TRANSACAO_CRIPTOMOEDA_CRIPTOMOEDA_IDX ON TRANSACAO_CRIPTOMOEDA (criptomoeda_id_criptomoeda);
CREATE INDEX TRANSACAO_CRIPTOMOEDA_DATA_IDX ON TRANSACAO_CRIPTOMOEDA (data_hora);
CREATE INDEX TRANSACAO_CRIPTOMOEDA_STATUS_IDX ON TRANSACAO_CRIPTOMOEDA (status);

-- ========================================
-- COMENTÁRIOS DAS TABELAS
-- ========================================
COMMENT ON TABLE CLIENTE IS 'Tabela de clientes da corretora';
COMMENT ON TABLE CONTA_EXTERNA IS 'Contas dos clientes em bancos externos para transferências';
COMMENT ON TABLE CONTA_INTERNA IS 'Contas internas da corretora para saldo em fiat';
COMMENT ON TABLE TRANSACAO_FIAT IS 'Transações de depósito e saque entre contas externas e internas';
COMMENT ON TABLE CRIPTOMOEDA IS 'Criptomoedas disponíveis para trading';
COMMENT ON TABLE CARTEIRA IS 'Carteiras digitais vinculadas às contas internas';
COMMENT ON TABLE POSSE IS 'Quantidades de criptomoedas possuídas por carteira';
COMMENT ON TABLE TRANSACAO_CRIPTOMOEDA IS 'Transações de compra e venda de criptomoedas';

-- ========================================
-- COMENTÁRIOS DAS COLUNAS
-- ========================================
COMMENT ON COLUMN CLIENTE.cpf IS 'CPF do cliente (apenas números)';
COMMENT ON COLUMN CONTA_EXTERNA.codigo_banco_externo IS 'Código de 3 dígitos do banco externo (BC)';
COMMENT ON COLUMN CONTA_INTERNA.codigo_banco_externo IS 'Código de 3 dígitos do banco interno (BC)';
COMMENT ON COLUMN CONTA_INTERNA.saldo IS 'Saldo em moeda fiat (R$)';
COMMENT ON COLUMN TRANSACAO_FIAT.tipo IS 'Tipo da transação: DEPOSITO ou SAQUE';
COMMENT ON COLUMN POSSE.quantidade_criptomoeda IS 'Quantidade de criptomoeda possuída';
COMMENT ON COLUMN TRANSACAO_CRIPTOMOEDA.tipo_operacao IS 'Tipo da operação: COMPRA ou VENDA';
COMMENT ON COLUMN TRANSACAO_CRIPTOMOEDA.status IS 'Status da transação';

-- ========================================
-- FIM DO SCRIPT DDL
-- ========================================